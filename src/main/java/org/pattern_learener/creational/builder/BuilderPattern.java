package org.pattern_learener.creational.builder;

/**
 * Суть паттерна - это порождающий паттерн проектирования, который позволяет создавать сложные объекты пошагово.
 * Строитель даёт возможность использовать один и тот же код строительства для получения разных представлений объектов.<p>
 * Применимость:<p>
 * - когда вы хотите избавиться от «телескопического конструктора»;<p>
 * - когда ваш код должен создавать разные представления какого-то объекта. Например, деревянные и железобетонные дома;<p>
 * - когда вам нужно собирать сложные составные объекты, например, деревья Компоновщика;<p>
 * Преимущества и недостатки:<p>
 * + позволяет создавать продукты пошагово;<p>
 * + позволяет использовать один и тот же код для создания различных продуктов;<p>
 * + изолирует сложный код сборки продукта от его основной бизнес-логики;<p>
 * - усложняет код программы из-за введения дополнительных классов;<p>
 * - клиент будет привязан к конкретным классам строителей, так как в интерфейсе директора может не быть метода получения результата.
 */
public class BuilderPattern {
}
